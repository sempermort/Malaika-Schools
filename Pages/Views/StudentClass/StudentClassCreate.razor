@page "/StudentClass/Create"
@page "/StudentClass/Create/{Id:int}"
@using MalaikaSchool.Pages.Views.ClassFees

@inherits OwningComponentBase<StudentsService>
@inject IToastService toastService


<div class="">
    <div class="box box-block bg-white ">
        <EditForm Model="@Model" Id="StudentClassCreate" class="col-md-7 m-auto">
            @*<DataAnnotationsValidator />*@
            <div class="page-header">
                <h1>
                    Add Class
                    <small>
                        <i class="ace-icon fa fa-angle-double-right float-right"></i>
                    </small>
                </h1>

            </div>
            <div class="form-horizontal">
                @*<ValidationSummary />*@

                <div class="form-group">
                    <label for="StudentClass" class="control-label">Student Class</label>
                    <div class="d-flex">
                        <InputSelect class="form-control" @oninput="(e =>SomeMethod(e))" @bind-Value="@Model.StudentClassId">
                            <option value="">Class Room</option>

                            @if (StudentClasses != null)
                            {
                                @foreach (var stc in StudentClasses)
                                {
                                    <option value="@stc.Id">@stc.ClassName</option>
                                }
                            }
                        </InputSelect>
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#GuardianTypeModal2">
                            <i class="fa fa-plus">  </i>
                        </button>
                    </div>
                </div>


                <div class="form-group mt-5 mb-5">

                    <div class="card ">
                        <div class="card-header">
                            Class Fees
                            <button type="button" class="btn btn-outline-primary btn-add float-right" data-toggle="modal" data-target="#GuardianTypeModal">
                                <span> add </span>  <i class="fa fa-plus">  </i>
                            </button>
                        </div>
                        @if (classFees.Count > 0)
                        {
                            <ul class="list-group list-group-flush">
                                @foreach (var stc in classFees)
                                {
                                    <li class="list-group-item d-flex justify-content-between"><span> @stc.Name </span>  <span>@stc.Amount</span></li>
                                    <hr style="background-color: aqua; margin:0;">
                                }
                            </ul>
                        }
                    </div>


                </div>


            </div>
        </EditForm>

        <div class="modal fade" id="GuardianTypeModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content p-2">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Add New Class</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <Create Id="Id" OnClassFeeAdded="ClassFeeAdded" />
                    </div>

                </div>
            </div>
        </div>

        <div class="modal fade" id="GuardianTypeModal2" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Add New Fee</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <AddClass/>
                </div>
            </div>
        </div>
    </div>
</div>






@code {

    [Parameter]
    public int Id { get; set; }
    private StudentClass Classroom = new StudentClass();
    private ClassFeeVM Model = new ClassFeeVM();
    private List<ClassFee> classFees = new List<ClassFee>();
    private List<StudentClass> StudentClasses = new List<StudentClass>();

    protected override async Task OnInitializedAsync()
    {
        try
        {

            StudentClasses = await Service.StudentClassIndex();

            if (Id > 0)
            {
                Model.StudentClassId = Id;
            }




        }
        catch (Exception ex)
        { }


    }

    protected async Task ClassFeeAdded()
    {
        var Listfee = await Service.ClassFeeIndex();
        classFees = Listfee.Where(n => n.StudentClassId == Id).ToList();
    }

    public async Task SomeMethod(ChangeEventArgs e)
    {
        var Listfee = await Service.ClassFeeIndex();
        classFees = Listfee.Where(n => n.StudentClassId == Convert.ToInt32(e.Value)).ToList();
        Id = Convert.ToInt32(e.Value);
    }


}
