@page "/Scheduler/SchedulerEventCreate"
@inherits OwningComponentBase<StudentsService>

<div class="">
    <div class="page-header">
        <h4>
          Add  Event
            <small>
                <i class="ace-icon fa fa-angle-double-right"></i>

                <NavLink href="/Scheduler/Index" class="btn btn-warning float-right">Back to List</NavLink>

            </small>
        </h4>
    </div>  
    <div class="box box-block bg-white ">
        <hr>
        <EditForm OnValidSubmit="@HandleValidSubmit" Model="@Model" Id="SchedulerEventForm" class="col-md-7 m-auto">
            @*<DataAnnotationsValidator />*@


            <div class="form-horizontal">
                @*<ValidationSummary />*@
                <div class="form-group">
                    <label for="Text" class="control-label">Event</label>
                    <InputText for="Text" class="form-control" @bind-Value="@Model.Text" />
                </div>

                <div class="form-group">
                    <label for="StartDate" class="control-label">Starting Date and Time</label>
                    <InputDate type="datetime" for="startDate" class="form-control" @bind-Value="@Model.StartDate" />
                </div>

                <div class="form-group">
                    <label for="Duration" class="control-label">Duration of Event in hours</label>
                    <InputNumber for="Duration" class="form-control" @bind-Value="@Model.Duration" />
                </div>

                <div class="form-group ">
                    <label for="SchedulerEventClassId" class="control-label">SchedulerEvent Class</label>
                    <InputSelect for="SchedulerEventClassId" class="form-control" @bind-Value="@Model.StudentClassId">
                        <option value="">Class</option>
                        @if (Classes != null)
                            {
                            @foreach (var stc in Classes)
                                {

                                <option value="@stc.Id">@stc.ClassName</option>
                                }
                            }
                    </InputSelect>

                </div>

                <div class="form-group float-right">
                    <div class="col-md-offset-4 col-md-8">
                        <small>
                            <input type="submit" class="btn btn-info" value="Create" />
                        </small>
                    </div>
                </div>
            </div>
        </EditForm>

    </div>
</div>




@code {

    [Parameter]
    public EventCallback<SchedulerEvent> callBack { get; set; }
    @inject NavigationManager NavigationManager
    private SchedulerEvent Model = new SchedulerEvent();
    private List<StudentClass> Classes = new List<StudentClass>();


    protected override async Task OnInitializedAsync()
    {
        Classes = await Service.StudentClassIndex();
    }


    //Hamdle SchedulerEvents photo



    //Submit Data
    public async Task HandleValidSubmit(EditContext context)
    {

        SchedulerEvent SchedulerEvent = new SchedulerEvent();
        try
        {
            SchedulerEvent = Model;

            var result = await Service.CreateSchedulerEvent(SchedulerEvent);
            // Clear the form.
            if (result != null)
            {
                NavigationManager.NavigateTo("/Scheduler/Index");
            }
            Model = new SchedulerEvent();
            // Show the Toast.
            await callBack.InvokeAsync(result);
        }
        catch (Exception)
        {
            //ToastContent = ex.GetBaseException().Message;

            //await this.ToastObj.Show();
        }
    }
}