@*@page "/AssignRolls/Index"
@inherits OwningComponentBase<StudentsService>






<table id="" class="table b-datagrid">
    <thead>
        <tr>
            <th><button type="button" class="btn btn-success" data-toggle="modal" data-target="#NewMark">New</button></th>
            <th style="cursor: pointer">Role</th>
        </tr>
        <tr>
            <th scope="col"><button type="button" class="btn btn-link">Clear Filter</button></th>
            <th scope="col"><input type="text" class="form-control"></th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {

            <tr>
                <td></td>
                <td>
                    @item.Name
                </td>



                <td>
                    <button class=" btn btn-primary" @onclick="()=>show(item)" data-toggle="modal" data-target="#GuardianTypeModal">Edit</button>
                    <button class=" btn btn-info" @onclick="()=>ShowDetails(item)" data-toggle="modal" data-target="#GuardianTypeModal1">Details</button>
                    <button class=" btn btn-danger" @onclick="()=>ClickDeleted(item)" data-toggle="modal" data-target="#GuardianTypeModal2">Delete</button>
                </td>


            </tr>



        }
    </tbody>
</table>
<div class="modal fade" id="NewMark" tabindex="-1" role="dialog" aria-labelledby="IdentityRolepleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content p-2">
            <div class="modal-header">
                <h5 class="modal-title" id="IdentityRolepleModalLabel">Add New Class</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <Create />
            </div>

        </div>
    </div>
</div>
@if (ShowConfirmation)
{
    <div class="modal fade show d-block" id="edited" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="IdentityRolepleModalLabel">Edit</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"
                            @onclick="() => NoShow()">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <Edit ModelEd="@pepaEd" ConfirmationChanged="ConfirmEdit_Click" />
            </div>
        </div>
    </div>
}



<Details @ref="ShowingDetails" ModelDet="pepaDet"></Details>

<ConfirmDelete @ref="DeletedConfirmation" ConfirmationChanged="ConfirmDelete_Click"
               ConfirmationMessage=@($"Are you sure you want to delete Student : \"{Studenty}\" Subject :\"{Subjecty}\" Mark :\"{pepaDel.Mark}\"")>
</ConfirmDelete>

@code {



private List<IdentityRole> Model = new List<IdentityRole>();

@inject RoleManager<IdentityRole> _userRole


//initial view
protected override async Task OnInitializedAsync()
{
    Model = await ;
            _

protected MalaikaSchool.Shared.ConfirmDelete DeletedConfirmation { get; set; }
protected MalaikaSchool.Pages.Views.AssignRolls.Details ShowingDetails { get; set; }
protected bool ShowConfirmation { get; set; } = false;
private IdentityRole pepaDel = new IdentityRole();
private IdentityRole pepaDet = new IdentityRole();
private IdentityRole pepaEd = new IdentityRole();

private void show(IdentityRole pep)
{
    pepaEd = pep;
    ShowConfirmation = true;
    StateHasChanged();
}
//close Edit Dialog
private void NoShow()
{
    ShowConfirmation = false;
    StateHasChanged();
}
//show Details
public void ShowDetails(IdentityRole pep)
{
    pepaDet = pep;
    ShowingDetails.Showing();

}

//Show delete dialog
private void ClickDeleted(IdentityRole pep)
{

    pepaDel = pep;
    DeletedConfirmation.Show();
    StateHasChanged();
}

//Confirm Deletion
protected async Task ConfirmDelete_Click(bool deleteConfirmed)
{
    if (deleteConfirmed)
    {
        await (pepaDel.Id);
        Model = await Service.IdentityRoleIndex();
    }
}

//Confirm Edition
protected async Task ConfirmEdit_Click(bool value)
{
    ShowConfirmation = value;
    Model = await Service.IdentityRoleIndex();

}


}*@
